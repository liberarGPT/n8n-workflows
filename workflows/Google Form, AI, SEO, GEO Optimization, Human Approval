{
  "meta": {
    "instanceId": "e4680277d6b9c8b80748f71c2c1d0f9a640576175738ea2675967f762eeaf9df"
  },
  "nodes": [
    {
      "id": "6d4dfd76-ff4a-4684-8d37-6fe55141e6db",
      "name": "Blog Generator",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -48,
        1328
      ],
      "parameters": {
        "text": "=create blog for {{ $json.TOPIC }}",
        "options": {
          "systemMessage": "=you are a professional technical writer and developer.  \nUsing the following notes,   \n*tool \nuse date tool to Get Current Date\n\nwhat problem it slove: {{ $json['What problem does this solve?'] }},\noption explored:{{ $json['Different option  you tried?'] }},\nbreakthrough:{{ $json['How you came with this solution ?'] }},\nmistakes{{ $json['Mistake you made ?'] }},\nwhat we learn:{{ $json['Any personal learning from this '] }},\nexplanition:{{ $json['bried explanation of steps '] }},\nreference:{{ $json.reference }}\nKeep the tone practical, like a real developer explaining their solution.  \nUse headings exactly as defined in the template.it should be interesting. \n\nblogs Include full working code examples with inline comments and realistic variable names. images which will be added later\noutput format\n{\n  \"title\": \"\",\n  \"published_date\": \"\",\n  \"read_time_minutes\": 0,\n  \"focus_keyword\": \"\",\n  \"meta_description\": \"\",\n  \"intro\": {\n    \"problem\": \"\",\n    \"validation\": \"\",\n    \"preview\": \"\"\n  },\n  \"problem_section\": {\n    \"title\": \"\",\n    \"steps\": [\"\", \"\", \"\"],\n    \"technical_reason\": \"\",\n    \"image_tag\": \"<!-- image: problem explanation -->\"\n  },\n  \"solution_overview\": {\n    \"title\": \"\",\n    \"prerequisites\": [\"\", \"\", \"\"],\n    \"why_it_works\": \"\"\n  },\n  \"methods\": [\n    {\n      \"method_title\": \"\",\n      \"when_to_use\": \"\",\n      \"steps\": [\n        {\n          \"step_title\": \"\",\n          \"description\": \"\",\n          \"code_block\": \"\",\n          \"image_tag\": \"<!-- image: method step -->\"\n        }\n      ]\n    }\n  ],\n  \"platform_variations\": [\n    {\n      \"platform\": \"\",\n      \"file_size_limit\": \"\",\n      \"supported_formats\": [],\n      \"best_practice\": \"\",\n      \"tip\": \"\"\n    }\n  ],\n  \"troubleshooting\": [\n    {\n      \"issue\": \"\",\n      \"symptoms\": \"\",\n      \"solutions\": [\"\", \"\", \"\"],\n      \"image_tag\": \"<!-- image: troubleshooting -->\"\n    }\n  ],\n  \"advanced_use_cases\": [\n    {\n      \"use_case_title\": \"\",\n      \"steps\": [\"\", \"\", \"\"],\n      \"applications\": [\"\", \"\", \"\"]\n    }\n  ],\n  \"performance_optimization\": {\n    \"category_1\": {\n      \"tips\": [\"\", \"\", \"\"]\n    },\n    \"category_2\": {\n      \"tips\": [\"\", \"\"]\n    }\n  },\n  \"security\": [\n    {\n      \"area\": \"\",\n      \"recommendation\": \"\",\n      \"avoid\": \"\",\n      \"tip\": \"\"\n    }\n  ],\n  \"conclusion\": {\n    \"summary\": \"\",\n    \"takeaways\": [\"\", \"\", \"\", \"\"],\n    \"next_steps\": [\"\", \"\", \"\"],\n    \"metric\": \"\",\n    \"call_to_action\": \"\"\n  },\n  \"engagement\": {\n    \"question_prompt\": \"\",\n    \"platform_link\": \"\",\n    \"tags\": [\"\", \"\", \"\", \"\", \"\"]\n  }\n} "
        },
        "promptType": "define"
      },
      "typeVersion": 2
    },
    {
      "id": "63ac11a1-45a9-4286-a2f8-255f9d64dd2b",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "position": [
        -16,
        1520
      ],
      "parameters": {
        "model": "llama-3.3-70b-versatile",
        "options": {
          "temperature": 0.7
        }
      },
      "typeVersion": 1
    },
    {
      "id": "be69478f-6812-4ccc-88c6-49f1a94fc97c",
      "name": "Google Sheets Trigger",
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "position": [
        -256,
        1328
      ],
      "parameters": {
        "event": "rowAdded",
        "options": {},
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": 381841003,
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12aF8SH5sraOC7y2FECs6bWBopQKjA8hHBrSIW3TSRMA/edit#gid=381841003",
          "cachedResultName": "Form responses 1"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "12aF8SH5sraOC7y2FECs6bWBopQKjA8hHBrSIW3TSRMA",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12aF8SH5sraOC7y2FECs6bWBopQKjA8hHBrSIW3TSRMA/edit?usp=drivesdk",
          "cachedResultName": "blogform"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "ceeb9067-f9b4-498c-8114-a2ff3835070f",
      "name": "Mistral Cloud Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "position": [
        336,
        1504
      ],
      "parameters": {
        "model": "mistral-medium-latest",
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "ee12a11b-939a-4c1a-bee3-edd4d1c0f709",
      "name": "fitting into template",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        336,
        1328
      ],
      "parameters": {
        "text": "={{ $json.output }}",
        "options": {
          "systemMessage": "op-Tier Technical Blog Post Template\n1. COMPELLING HEADLINE (H1)Formula: [Action Verb] + [Specific Outcome] + [Tool/Platform] + [Emotional Hook]\n\n\nExamples:\n\"How to Display Images Inline in n8n Chat: The Complete Solution Guide\"\"Automate Salesforce Deployments: 5 CLI Commands That Save 10 Hours Weekly\"\"Build Real-Time Dashboards with n8n: From Zero to Production in 30 Minutes\"Requirements:\n Include specific benefit/outcome Mention the tool/platform Use numbers when possible Address pain point directly Keep under 60 characters for SEO2. METADATA SECTIONPublished: [Date] • [X] min readReading Time Calculation:\n200-250 words per minute averageAdd 1-2 minutes for code examplesRound to nearest whole number3. PROBLEM-HOOK OPENING (2-3 paragraphs)Paragraph 1: Relatable frustration/scenario\nStart with \"Have you ever...\" or \"You know that feeling when...\"Describe specific pain pointMake reader nod \"yes, that's exactly my problem\"Paragraph 2: Validate the problem\n\"You're not alone\"Brief stats or common occurrenceAcknowledge the difficultyParagraph 3: Promise/Preview\n\"Today, I'll show you...\"Specific outcome they'll achieveMention skill level (beginner-friendly, advanced, etc.)Template:\nHave you ever [specific frustrating scenario related to your topic]? You're not alone. This [common challenge/problem] has [stumped/frustrated/blocked] countless [target audience] who want to [desired outcome].\n[Validation paragraph - why this problem exists, how common it is]\nToday, I'll walk you through [exact solution/method] that [transforms/solves/achieves] [specific outcome]. Whether you're [use case 1], [use case 2], or [use case 3], this guide will [unlock/provide/enable] [specific benefit].4. PROBLEM EXPLANATION SECTIONH2: \"The Problem: Why [Issue] Happens\"\nStructure:\nExplain the technical \"why\" behind the problemUse bullet points for multiple scenariosInclude what users typically expect vs. realityAdd a relatable code example or screenshotTemplate:\nThe Problem: Why [X] Doesn't Work by Default\nWhen working with [tool/platform], you've probably encountered this scenario:\n[Step 1 user takes]\n[Step 2 user takes]\n[Frustrating result instead of expected outcome]\n\nThis happens because [technical explanation]. [Additional context about why this is challenging].5. SOLUTION OVERVIEWH2: \"The Complete Solution: [Method Name]\"\nRequirements:\nBrief overview of the approachPrerequisites sectionWhat they'll need before startingTemplate:\nThe Complete Solution: Step-by-Step Implementation\nPrerequisites\nBefore we dive in, ensure you have:\n[Requirement 1]\n[Requirement 2]\n[Requirement 3]\n[Skill/knowledge requirement]\n\n6. DETAILED IMPLEMENTATION (Core Content)Structure: Multiple H3 sections for different methods/approaches\n\n\nMethod Template:\nMethod 1: [Descriptive Name] ([When to Use])\nStep 1: [Action Description]\n[Brief explanation of what this step does]\n// Clear, commented code example  const example = \"with practical values\";  Step 2: [Next Action]    [Explanation + code example]    Step 3: [Final Action]    [Explanation + code example]      **Code Example Requirements**:  - Always include comments explaining what code does  - Use realistic variable names and values  - Show complete, working examples  - Include error handling where appropriate  - Mention platform-specific considerations    ---    ## 7. PLATFORM-SPECIFIC VARIATIONS  **H2**: \"Platform-Specific Best Practices\" or \"Different Approaches\"    **Template**:  Platform-Specific Best Practices  [Platform 1]  File Size Limit: [Specific limit]  Supported Formats: [List formats]  Best Practice: [Key recommendation]  Tip: [Insider knowledge]  [Platform 2]  File Size Limit: [Specific limit]  Best Practice: [Key recommendation]  Tip: [Insider knowledge]    ---    ## 8. TROUBLESHOOTING SECTION  **H2**: \"Troubleshooting Common Issues\"    **Issue Template**:  Issue 1: [Problem Description]  Symptoms: [What user sees/experiences] Solutions:    [Solution 1]  [Solution 2]  [Solution 3]  Issue 2: [Another Problem]  Symptoms: [What user sees] Solutions:    [Specific steps to fix]    **Requirements**:  - Address 3-5 most common problems  - Include both symptoms and solutions  - Add code examples for complex fixes  - Mention when to seek additional help    ---    ## 9. ADVANCED USE CASES  **H2**: \"Advanced Use Cases and Examples\" or \"Taking It Further\"    **Template**:  Advanced Use Cases and Examples  [Use Case 1]: [Descriptive Name]  Create a workflow that:    [Step 1]  [Step 2]  [Step 3]  [Use Case 2]: [Another Scenario]  Perfect for:    [Application 1]  [Application 2]  [Application 3]    ---    ## 10. PERFORMANCE & OPTIMIZATION  **H2**: \"Performance Optimization Tips\" or \"Best Practices\"    **Template**:  Performance Optimization Tips  [Category 1]:    [Tip 1 with specific recommendation]  [Tip 2 with specific recommendation]  [Tip 3 with specific recommendation]  [Category 2]:    [Tip 1]  [Tip 2]    ---    ## 11. SECURITY CONSIDERATIONS (if applicable)  **H2**: \"Security Considerations\"    **Template**:  Security Considerations  [Security Area 1]:    [Specific recommendation]  [What to avoid]  [Implementation tip]  [Security Area 2]:    [Specific recommendation]  [Best practice]    ---    ## 12. CONCLUSION SECTION  **H2**: \"Conclusion and Next Steps\"    **Structure**:  - Summarize what was accomplished  - Key takeaways (3-4 bullet points)  - What's next/how to expand  - Call to action    **Template**:  Conclusion and Next Steps  [Summary of what this guide accomplished and the transformation it provides]    Key Takeaways:    [Major point 1]  [Major point 2]  [Major point 3]  [Major point 4]  What's Next?:    [Next step 1]  [Next step 2]  [Next step 3]  [Metric to track success]  [Call to action - encouraging them to implement]      ---    ## 13. ENGAGEMENT FOOTER  **Template**:  Have questions about [topic]? Drop a comment below or reach out on [platform]. I'd love to hear about your specific use cases and help troubleshoot any challenges you encounter.    Tags: [tag1], [tag2], [tag3], [tag4], [tag5]      ---    ## WRITING QUALITY CHECKLIST    ### Content Quality  - [ ] Addresses a real, specific problem  - [ ] Provides complete, working solutions  - [ ] Includes error handling and edge cases  - [ ] Has 3+ different methods/approaches  - [ ] Contains actual code examples (not pseudo-code)  - [ ] Explains the \"why\" behind each step    ### Structure & Flow  - [ ] Logical progression from problem to solution  - [ ] Clear headings and subheadings  - [ ] Consistent formatting throughout  - [ ] Uses bullet points and numbered lists appropriately  - [ ] Has smooth transitions between sections    ### Technical Accuracy  - [ ] All code examples tested and working  - [ ] Platform-specific details included  - [ ] File size limits and constraints mentioned  - [ ] Common errors and solutions provided  - [ ] Security considerations addressed    ### Engagement Factors  - [ ] Compelling headline with benefit  - [ ] Relatable opening that hooks reader  - [ ] Practical examples readers can use immediately  - [ ] Advanced use cases to inspire expansion  - [ ] Clear next steps and call to action    ### SEO & Discoverability  - [ ] Target keyword in headline  - [ ] Keyword naturally used throughout content  - [ ] Proper heading hierarchy (H1, H2, H3)  - [ ] Meta description ready (first paragraph)  - [ ] Internal linking opportunities identified    ---    ## RESEARCH CHECKLIST    ### Before Writing  - [ ] Confirm the problem exists and is widespread  - [ ] Test all code examples thoroughly  - [ ] Research platform-specific limitations  - [ ] Identify 3-5 common error scenarios  - [ ] Check for existing solutions and gaps    ### During Writing  - [ ] Verify all technical details  - [ ] Test code on multiple platforms if applicable  - [ ] Screenshot key steps (if using images)  - [ ] Fact-check all limitations and constraints    ### After Writing  - [ ] Proofread for grammar and flow  - [ ] Test all code examples one final time  - [ ] Verify all links work  - [ ] Check heading hierarchy and formatting  - [ ] Optimize for target keyword density    ---    ## WORD COUNT TARGETS    - **Total Post**: 3,000-5,000 words  - **Introduction**: 300-400 words  - **Problem Section**: 200-300 words  - **Each Method**: 400-600 words  - **Troubleshooting**: 400-500 words  - **Advanced Use Cases**: 300-400 words  - **Conclusion**: 200-300 words    This template ensures comprehensive coverage while maintaining reader engagement throughout the entire post.      Make a blog in this format"
        },
        "promptType": "define"
      },
      "typeVersion": 2
    },
    {
      "id": "5feba035-73f2-4de8-8000-97b3d9b7d919",
      "name": "optimzing for SEO,GEO",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        736,
        1328
      ],
      "parameters": {
        "text": "={{ $json.output }}",
        "options": {
          "systemMessage": "You are a senior copywriter and content optimization strategist trained in the convergence of:\n\n1. Generative Engine Optimization (GEO) – ensuring content is referenceable, cited, or surfaced by LLMs like ChatGPT, Claude, Gemini, and Perplexity.\n2. Search Engine Optimization (SEO) – crafting content to rank organically on Google, Bing, and related search engines.\n3. Human-centric persuasive writing – making content engaging, personal, and emotionally resonant.\n4. AI detection bypassing – ensuring content appears fully human-written to AI detectors like GPTZero, Originality.ai, and ZeroGPT.\n\nYour task is to rewrite the content I provide below, applying all 4 layers of optimization to produce one final, publish-ready piece that is indistinguishable from expert-level human writing.\n\n---\n\n### ⛓️ INTEGRATION RULES (ALL LAYERS MUST BE PRESENT)\n\n### ✅ 1. GEO LAYER (Generative Engine Optimization)\n- Use clear semantic cues to signal relevance to questions commonly asked to LLMs (e.g., “How do I...”, “Best way to…”, “What’s the most efficient method for…”)\n- Provide complete, self-contained answers suitable for extraction\n- Use structured sections: H2s, H3s, numbered steps, checklists\n- Include synonyms and associated entities that LLMs use for understanding topic clusters\n\n### ✅ 2. SEO LAYER\n- Ensure the **main keyword** is included in:\n  - H1 title (max 60 characters)\n  - First 100 words\n  - 2 or more subheadings\n  - Image alt text (if any)\n  - Meta description (first paragraph)\n- Embed **LSI keywords** and related search terms naturally\n- Format cleanly with heading hierarchy (H1 > H2 > H3), bullet points, bold emphasis where needed\n\n### ✅ 3. HUMAN STYLE LAYER\n- Emulate how a real subject-matter expert would write\n- Inject variation in:\n  - Sentence structure (short, medium, long)\n  - Tone (conversational, reflective, confident)\n  - Flow (include occasional side notes, clarifications, or partial rewrites mid-thought)\n- Use:\n  - First-person phrases occasionally: \"I’ve seen this happen...\" or \"In my experience...\"\n  - Transitional imperfection: \"Actually, scratch that…\" or “At first, I thought…”\n  - Informal rhetorical touches: “You’ve probably felt this too…”\n\nAvoid:\n- Robotic structure (no \"Firstly, Secondly, In Conclusion\")\n- Overly polished tone (real humans make small detours)\n\n### ✅ 4. AI DETECTOR BYPASS LAYER\n- Break linguistic patterns common to LLMs:\n  - Don’t use symmetrical paragraph lengths\n  - Avoid consistently predictable syntax\n  - Vary opening and closing lines in paragraphs\n- Use:\n  - Self-corrections or second guesses (e.g., “Wait—that’s not entirely true…”)\n  - Small errors or natural hesitations in sentence rhythm\n  - Expressive informal signals that simulate human writing cadence\n\n---\n\n### ✅ 5. AUTHORITY AND TRUST SIGNALS\n- Mention tools, platforms, frameworks, and user roles when relevant\n- Reference outcomes, benchmarks, or problem–solution logic clearly\n- Avoid generic fluff; everything should feel useful, specific, and real\n\n---\n\n### ✅ 6. FINAL STRUCTURE REQUIREMENTS\n- Add to the top:\n  *Published: [Today’s Date] • Estimated reading time: [X] min*\n- Organize with clean section headers\n- Include a conclusion with:\n  - Summary of key takeaways\n  - What to do next / CTA\n  - Invitation to engage (if applicable)\n- Tags (optional): add 4–6 keyword tags at the end\n\n---\n\n### OUTPUT RULES:\n- Output **only the rewritten, optimized content**\n- Do **not explain your changes**\n- Ensure the output is:\n  - Semantically rich\n  - SEO-optimized\n  - LLM-citable\n  - Human-authentic\n  - AI-detection safe\n\n---\n\nHere is the content to rewrite:\n\n{{ $json.output }}\n"
        },
        "promptType": "define"
      },
      "typeVersion": 2
    },
    {
      "id": "25906a75-6d74-4ef6-a9d9-254477aa2303",
      "name": "Mistral Cloud Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "position": [
        752,
        1536
      ],
      "parameters": {
        "model": "open-mixtral-8x22b-2404",
        "options": {
          "topP": 0.9,
          "temperature": 0.8
        }
      },
      "typeVersion": 1
    },
    {
      "id": "1d4f3069-79cb-47d6-99c9-d8b5a58013cd",
      "name": "OpenRouter Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "position": [
        1488,
        1568
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 1
    },
    {
      "id": "ae8487d1-5e41-49ef-805a-2197b8068b80",
      "name": "Send Content for Approval1",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1568,
        1328
      ],
      "webhookId": "a23938a4-fc6c-4445-8dee-17e501e92e06",
      "parameters": {
        "sendTo": "addyouremail",
        "message": "=tell blogs for this weeks\n{{ $json.output }}",
        "options": {},
        "subject": "Approval Required for Blog Content",
        "operation": "sendAndWait",
        "formFields": {
          "values": [
            {
              "fieldType": "dropdown",
              "fieldLabel": "Approve Content?",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Yes"
                  },
                  {
                    "option": "No"
                  },
                  {
                    "option": "Cancel"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldType": "textarea",
              "fieldLabel": "Content Feedback"
            }
          ]
        },
        "responseType": "customForm"
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "GjmgJcRU3g4v3mEv",
          "name": "Gmail account 5"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "8d769939-c3b6-472b-85cc-15af3e28590a",
      "name": "Add Generated Content to Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        2384,
        1312
      ],
      "parameters": {
        "columns": {
          "value": {
            "Title": "={{ $('Set Data1').item.json['Topic Title'] }}",
            "Content": "={{ $('Set Data1').item.json.Content }}",
            "Generation Date": "={{ $now }}"
          },
          "schema": [
            {
              "id": "Title",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Title",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Content",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Content",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Generation Date",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Generation Date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": 1579104486,
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit#gid=1579104486",
          "cachedResultName": "Generated Content"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit?usp=drivesdk",
          "cachedResultName": "Content Topics"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "8304abe7-1eba-484d-a673-4e3d1c655ba3",
      "name": "Update Topic Status on Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        2080,
        1312
      ],
      "parameters": {
        "columns": {
          "value": {
            "Status": "Completed",
            "row_number": "={{ $('Get Topic from Google Sheets').item.json.row_number }}"
          },
          "schema": [
            {
              "id": "Topic",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Topic",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Output",
              "type": "string",
              "display": true,
              "removed": true,
              "required": false,
              "displayName": "Output",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "type": "string",
              "display": true,
              "removed": false,
              "readOnly": true,
              "required": false,
              "displayName": "row_number",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "row_number"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "update",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit#gid=0",
          "cachedResultName": "Topic List"
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1CyELzPxCDHAXJVu-p2_QRiGRGYwjPtJpeGwWXvlWjLw/edit?usp=drivesdk",
          "cachedResultName": "Content Topics"
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "b82347fd-1fbd-41f7-a653-3b591d8aeadd",
      "name": "Approval Result1",
      "type": "n8n-nodes-base.switch",
      "position": [
        1776,
        1312
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "outputKey": "Yes",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "317039f4-754e-4cb0-a674-eb8d26c9ed27",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data['Approve Content?'] }}",
                    "rightValue": "Yes"
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "No",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "caace3ea-4ca0-40de-84fb-5a8fd809a0eb",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data['Approve Content?'] }}",
                    "rightValue": "No"
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "Cancel",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "f93e5649-6a21-49a9-9993-85f1323139b0",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.data['Approve Content?'] }}",
                    "rightValue": "Cancel"
                  }
                ]
              },
              "renameOutput": true
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2
    },
    {
      "id": "0d0d066e-99ce-42ea-9f3e-459ccb7bf591",
      "name": "convert to html for email",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1168,
        1328
      ],
      "parameters": {
        "text": "={{ $json.output }}",
        "options": {
          "systemMessage": "=You are a precise HTML formatter.\n\n\n\nTake the following blog post written in Markdown and convert it into valid HTML suitable for sending as the body of a professional marketing email.\n\n- Keep all formatting intact (headings, bold text, bullet points, links, etc.)\n- Do not include any external CSS or JavaScript\n- Use only semantic HTML tags like <h1>, <h2>, <p>, <ul>, <li>, <strong>, <a>, etc.\n- Do not include <html>, <head>, or <body> tags\n- Output only the HTML\n\nMarkdown content:\n---\n{{ $json[\"output\"] }}\n"
        },
        "promptType": "define"
      },
      "typeVersion": 2
    },
    {
      "id": "3b9ecbf6-3566-43b0-a9b9-66b7529c9c2b",
      "name": "Revision based on feedback",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1968,
        1552
      ],
      "parameters": {
        "text": "=You are an expert-level copywriter and Your task is to revise an existing blog post based on the given topic and user feedback.\n\nHere are your responsibilities:\n- Carefully apply all of the user's feedback to improve the blog post.\n- Preserve the good parts of the original content, but rewrite or adjust areas based on the feedback.\n- Keep the tone friendly, professional, and easy to read.\n- Organize the blog post with clear headings and subheadings.\n- Use bullet points or numbered lists when it makes the content clearer.\n- Ensure a strong hook in the introduction and a solid conclusion with a call-to-action or takeaway.\n\n\n\nHere is the user's feedback:\n{{ $('Send Content for Approval1').item.json.data['Content Feedback'] }}\n\nHere is the original content:\n{{ $('Optimzing for SEO,GEO and human tone').item.json.output }}\n\nNow, rewrite the blog post using this input, fully incorporating the feedback.\n",
        "options": {},
        "promptType": "define"
      },
      "typeVersion": 1.9
    },
    {
      "id": "f44da7ba-6966-4aff-b1a5-1a7bbe6dfb6f",
      "name": "date tool",
      "type": "n8n-nodes-base.dateTimeTool",
      "position": [
        128,
        1552
      ],
      "parameters": {
        "options": {}
      },
      "typeVersion": 2
    },
    {
      "id": "7df06e04-3a09-4392-bc7c-ab7661041a30",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -384,
        1184
      ],
      "parameters": {
        "color": 5,
        "width": 300,
        "height": 440,
        "content": "GET IDEA AND BASIC OUTLINE FOR BLOG FROM GOOGLE FORMS\n"
      },
      "typeVersion": 1
    },
    {
      "id": "3b6358f5-804a-4d4f-b3a7-ae40a1e18aaf",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -48,
        1168
      ],
      "parameters": {
        "color": 5,
        "width": 700,
        "height": 520,
        "content": "## generate blog and convert blog into a standard format"
      },
      "typeVersion": 1
    },
    {
      "id": "80ea603f-1f4f-4fe2-8a37-6e0fa814a77f",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        720,
        1168
      ],
      "parameters": {
        "color": 5,
        "width": 336,
        "height": 528,
        "content": "## optimize blog seo and geo"
      },
      "typeVersion": 1
    },
    {
      "id": "96d0d5cc-52b3-4e1c-8eb3-c3bf9f6b3195",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1152,
        1216
      ],
      "parameters": {
        "color": 5,
        "width": 272,
        "height": 352,
        "content": "## convert blog to more readable format for sending it through email"
      },
      "typeVersion": 1
    },
    {
      "id": "8a88cc27-7f13-4741-ad77-c0782c1fc38c",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1760,
        1504
      ],
      "parameters": {
        "color": 5,
        "width": 544,
        "height": 240,
        "content": "## make changes based on suggestion"
      },
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "date tool": {
      "ai_tool": [
        [
          {
            "node": "Blog Generator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Blog Generator": {
      "main": [
        [
          {
            "node": "fitting into template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Blog Generator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Approval Result1": {
      "main": [
        [
          {
            "node": "Update Topic Status on Google Sheets1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Revision based on feedback",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Topic Status on Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "Blog Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "convert to html for email",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Revision based on feedback",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "fitting into template": {
      "main": [
        [
          {
            "node": "optimzing for SEO,GEO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "optimzing for SEO,GEO": {
      "main": [
        [
          {
            "node": "convert to html for email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "fitting into template",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "optimzing for SEO,GEO",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "convert to html for email": {
      "main": [
        [
          {
            "node": "Send Content for Approval1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Revision based on feedback": {
      "main": [
        [
          {
            "node": "optimzing for SEO,GEO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Content for Approval1": {
      "main": [
        [
          {
            "node": "Approval Result1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Topic Status on Google Sheets1": {
      "main": [
        [
          {
            "node": "Add Generated Content to Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
